1.A __A___ is a data type you can create that contains one or more variables known as fields.
	a. structure
	b. collection
	c. volume
	d. list
	
2. Before you can use a structure to store data, you must create a(n) ___B__ of the structure in memory.
	a.copy
	b.instance
	c.declaration
	d.reference
	
3. When the items in two data structures are related by their indexes, it is said that a __B___ exists between the data structures.
	a. bindary union
	b. parallel relationship
	c. unilateral bond
	d. vitual connection

4. A program uses a DataTime object's ToString method to display its value, and the output is 3/17/1999. Which format string was used with the ToString method?
	__F__
	
	a. "D"
	b. "d"
	c. "F"
	d. "MDY"
	
5. Which expression returns the current data and time form the system?
	__A__
	a.DataTime.Today
	b.DateTime.SysDateTime
	c.DateTime.Current
	d.DataTime.Now
	
6. Which expression returns the current data, but not the time, from the system?
	___D__
	a.DataTime.Today
	b.DateTime.SysDateTime
	c.DateTime.Current
	d.DataTime.Now
	
7.	Which of the following is not a property of a TimeSpan object?
	__B__
	a.Days
	b.Months
	c.Hours
	d.Minutes
	
8. When you create a(n)_____, you specify a set of symbolic values that belong to that data type.
	___C__
	a. abstract data type
	b. symbolic data type
	c. enumerated data type
	d. cryptic data type 
	
9.___B__ are constants that represent integer values.
	a. Literals
	b. Enumerators
	c. Constants
	d. Tokens
	
10. You can use the ___B__ method to determien whether a key exists in a dictionary.
	a. KeyIn
	b. ContainsKey
	c. KeyMatch
	d. KeyExists

11. You can use the ___B__ method to determien whether a value exists in a dictionary.
	a.ValueIn
	b. ContainsValue
	c. ValueMatch
	d. ValueExists
	
12. You use ___A__ to remove an element from a dictionary.
	a. the Remove method
	b. the Erase method
	c. the Delete method
	d. the Del method
	
	
13. The __D___ property holds the number of elements in a declaration.
	a. Size
	b. Len
	c. Elements
	d. Count
	
14. Assuming food is a Dictionary, what does the following statement do?
___A__

		food[101] = "Cheesburger";
	a.After the statement executes, the Dictionary will have an element with the key 101 and the value "Cheeseburger." 
	b.After the statement executes, the Dictionary will have an element with the key "Cheeseburger" and the value 101.
	c.After the statement executes, the Dictionary will have 101 elements, each with a key "Cheeseburger." 
	d.After the statement executes, the element at position 101 will have the key "Cheeseburger."
	
True or False
1. The fields contained in a structure must be of the same type FALSE
2. Before you can use the structure to store data, you must create an instance of the structure in memory. TRUE
3. Structure objects can be passed into a method only by reference. TRUE
4. You cannot perform comparision operations directly on structure objects. TRUE
5. Enumeraters must be enclosed in quotation marks.  FALSE
6. An enum declaration can only appear inside the application's namesapce.FALSE
7. The integer values that you assign to enumerators do not have to be unique. FALSE
8. You can compare enumerators can enum variables with relational operators. TRUE
9. The DataTime.TryParse method will successfullt convert the string "8/22/1990" to a DateTime object. TRUE
10. You can use relational operators to compare two DataTime objects and determine which one is earlier or later. TRUE
11. You can store duplicate keys in a Dictionary. FALSE
12. A Dictionary object's Remove method returns an integer indicating the number of elements that were removed. TRUE
13. A KeyAvaluePair object has three properties: Index, Key, and Value. FALSE

Short Answer
1. List the places that a structure can be declared in code.

	1. Outside the application's namespace
	2. Inside the application's namespace
	3. Inside a class
	4. Inside another structure
	
2. Assume an application contains a structure named Fruit. Write a statement that demonstrates how you would create a List that can holder Fruit objects
	List<Fruit> FrutList = new List<Fruit>();
	
3. What will the following code display?
	Dictionary <string, int> dct = new Dictionary<string, int>()
	{
		{"Monday", 1},
		{"Tuesday", 2},
		{"Wednesday",3}
	};
	MessageBox.Show(dct["Tuesday"].ToString());
	
	2

4. How do you delete an element from a dictionary?
	 Dictionary.Remove("Value")

5.How do you determine the number of elements that are stored in a dictionaty

	Store the Dictionary Elements in an List, call the list.length method

6.Can enumerators be used in a loop to step through the elements of an arrray? Why or why not?
	
	You could iterate through a list of items until the value of item is equated to the enumerated value

7.Why should you use the new operator when creating instances of a structure?

	The new operator is used to instantiate an object. So in order to create an object, you need to use the new operator.
Algorithm Workbench

1. Look at the following structure declaration:

	struct Engine
	{
		public inr cylinders;
		public int hoursepower
		public int torque;
	}
Write a method that accepts two Engine structures as arguments, determines if the two structures are equal, and return the the Boolen value true if the structures are equal or false if the structures are not equal.

	private bool compareStruc(ref Engine E1, ref Engine E2)
	{
		try
		{
			if(E1.cylinders==E2.cylinders && 
			   E1.hoursepower==E2.hoursepower &&
			   E1.torque==E2.torque )
			   {
					return true;
			   }
			   return false;
		}
		catch(Exception ex)
		{
			Console.WriteLine(ex.Message);
		
		{
	}

2. Declare an enumerated data type named Direction with enumerators for North, South, East, and West.
	enum Direction
	{
		North,
		South,
		East,
		West
	}
	
	
3. Give an example of instantiating a DateTime object named dt, initialized with the data Augest 22, 1965.
	DateTime dt = new DateTime(1965, 8, 22);
	
4. data and date2 are DateTime objects containing two difference dates. Write code that displays the values of theses two objects in chronological order.
	if(data.ToString("T") > data2.ToString("T"))
	{
		Console.WriteLine(data);
	}
	else
	{
		Console.WriteLine(data2);
	}
5. Given the following declaration, write code that uses a TimeSpan object to add five days to the data1 object and assigns the result to a second DateTime object named data2.

		DateTime date1 = new DateTime(1977,3,22);
	   // Create a TimeSpan object for 5 days.
	   TimeSpan tspan = new TimeSpan(5,0,0,0);
	   
	   // Add the TimeSpan object to the DateTime object.
	   DateTime futureDate = date1 + tspan;
		
6. Write a statement that defines a Dictionary named food. The Keys should be string s, and the values should be int s.
 Dictionary<string,int> Food = new Dictionary<int, string>()
  {
   {"Pizza",101},
   {"Hotdog",102},
   {"Hamburger",103},
   {"Soda",104}
  };
7. Suppose a program declares a Dictionary as follows:

Dictionary<int, string> customers = new Dictionary<int, string>();

Write statements that use the Dictionary class's Add method to insert the following elements:

	9001,	"Jen Williams"
	9002,	"Frank Smith"
	9003,	"Geri Rose"
	
	
	Dictionary<int, string> customers = new Dictionary<int, string>();
	{
	{9001,	"Jen Williams"},
	{9002,	"Frank Smith"},
	{9003,	"Geri Rose"}
	};
8. Suppose a program has the following Dictionary definition:
	
	Dictionary<int, string> customers = new Dictionary<int, string>();
	
Write a for loop that iterates over the Dictionary. Each element's key should be added to ListBox named customerListBox.

	Dictionary<int, string> customers = new Dictionary<int, string>();
	foreach(KeyValuePair<int, string> element in customers)
   {
       CustomeristBox.Items.Add("ID: " + element.Key + " Name: " + element.Value);
   }
   
9. Suppose a program has the following Dictionary definition:

	     

Write an if statement that determines whether the key 999 exisits in the Dictionary. If the key exists, display the message "Customer 999 found" in a message box. Otherwise, display the message "Customer 999 not found."
if(!custimer.ContainsKey(999))
  {
   MeassageBox.Show("Customer 999 found");
  }
 else{
	MeassageBox.Show("Customer 999 not found");
 }
